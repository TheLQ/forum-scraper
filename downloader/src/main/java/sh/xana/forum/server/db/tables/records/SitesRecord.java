/*
 * This file is generated by jOOQ.
 */
package sh.xana.forum.server.db.tables.records;

import java.time.LocalDateTime;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import sh.xana.forum.server.db.tables.Sites;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SitesRecord extends UpdatableRecordImpl<SitesRecord>
    implements Record3<byte[], String, LocalDateTime> {

  private static final long serialVersionUID = 1L;

  /** Setter for <code>Sites.id</code>. */
  public void setId(byte[] value) {
    set(0, value);
  }

  /** Getter for <code>Sites.id</code>. */
  public byte[] getId() {
    return (byte[]) get(0);
  }

  /** Setter for <code>Sites.url</code>. */
  public void setUrl(String value) {
    set(1, value);
  }

  /** Getter for <code>Sites.url</code>. */
  public String getUrl() {
    return (String) get(1);
  }

  /** Setter for <code>Sites.updated</code>. */
  public void setUpdated(LocalDateTime value) {
    set(2, value);
  }

  /** Getter for <code>Sites.updated</code>. */
  public LocalDateTime getUpdated() {
    return (LocalDateTime) get(2);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<byte[]> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record3 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row3<byte[], String, LocalDateTime> fieldsRow() {
    return (Row3) super.fieldsRow();
  }

  @Override
  public Row3<byte[], String, LocalDateTime> valuesRow() {
    return (Row3) super.valuesRow();
  }

  @Override
  public Field<byte[]> field1() {
    return Sites.SITES.ID;
  }

  @Override
  public Field<String> field2() {
    return Sites.SITES.URL;
  }

  @Override
  public Field<LocalDateTime> field3() {
    return Sites.SITES.UPDATED;
  }

  @Override
  public byte[] component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getUrl();
  }

  @Override
  public LocalDateTime component3() {
    return getUpdated();
  }

  @Override
  public byte[] value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getUrl();
  }

  @Override
  public LocalDateTime value3() {
    return getUpdated();
  }

  @Override
  public SitesRecord value1(byte[] value) {
    setId(value);
    return this;
  }

  @Override
  public SitesRecord value2(String value) {
    setUrl(value);
    return this;
  }

  @Override
  public SitesRecord value3(LocalDateTime value) {
    setUpdated(value);
    return this;
  }

  @Override
  public SitesRecord values(byte[] value1, String value2, LocalDateTime value3) {
    value1(value1);
    value2(value2);
    value3(value3);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached SitesRecord */
  public SitesRecord() {
    super(Sites.SITES);
  }

  /** Create a detached, initialised SitesRecord */
  public SitesRecord(byte[] id, String url, LocalDateTime updated) {
    super(Sites.SITES);

    setId(id);
    setUrl(url);
    setUpdated(updated);
  }
}
