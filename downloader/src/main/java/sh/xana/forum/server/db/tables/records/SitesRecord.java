/*
 * This file is generated by jOOQ.
 */
package sh.xana.forum.server.db.tables.records;

import java.net.URI;
import java.time.LocalDateTime;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import sh.xana.forum.server.db.tables.Sites;
import sh.xana.forum.server.dbutil.ForumType;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SitesRecord extends UpdatableRecordImpl<SitesRecord>
    implements Record4<UUID, URI, LocalDateTime, ForumType> {

  private static final long serialVersionUID = 1L;

  /** Setter for <code>forum-scrape.Sites.siteId</code>. */
  public void setSiteid(UUID value) {
    set(0, value);
  }

  /** Getter for <code>forum-scrape.Sites.siteId</code>. */
  public UUID getSiteid() {
    return (UUID) get(0);
  }

  /** Setter for <code>forum-scrape.Sites.siteUrl</code>. */
  public void setSiteurl(URI value) {
    set(1, value);
  }

  /** Getter for <code>forum-scrape.Sites.siteUrl</code>. */
  public URI getSiteurl() {
    return (URI) get(1);
  }

  /** Setter for <code>forum-scrape.Sites.siteUpdated</code>. */
  public void setSiteupdated(LocalDateTime value) {
    set(2, value);
  }

  /** Getter for <code>forum-scrape.Sites.siteUpdated</code>. */
  public LocalDateTime getSiteupdated() {
    return (LocalDateTime) get(2);
  }

  /** Setter for <code>forum-scrape.Sites.ForumType</code>. */
  public void setForumtype(ForumType value) {
    set(3, value);
  }

  /** Getter for <code>forum-scrape.Sites.ForumType</code>. */
  public ForumType getForumtype() {
    return (ForumType) get(3);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<UUID> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record4 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row4<UUID, URI, LocalDateTime, ForumType> fieldsRow() {
    return (Row4) super.fieldsRow();
  }

  @Override
  public Row4<UUID, URI, LocalDateTime, ForumType> valuesRow() {
    return (Row4) super.valuesRow();
  }

  @Override
  public Field<UUID> field1() {
    return Sites.SITES.SITEID;
  }

  @Override
  public Field<URI> field2() {
    return Sites.SITES.SITEURL;
  }

  @Override
  public Field<LocalDateTime> field3() {
    return Sites.SITES.SITEUPDATED;
  }

  @Override
  public Field<ForumType> field4() {
    return Sites.SITES.FORUMTYPE;
  }

  @Override
  public UUID component1() {
    return getSiteid();
  }

  @Override
  public URI component2() {
    return getSiteurl();
  }

  @Override
  public LocalDateTime component3() {
    return getSiteupdated();
  }

  @Override
  public ForumType component4() {
    return getForumtype();
  }

  @Override
  public UUID value1() {
    return getSiteid();
  }

  @Override
  public URI value2() {
    return getSiteurl();
  }

  @Override
  public LocalDateTime value3() {
    return getSiteupdated();
  }

  @Override
  public ForumType value4() {
    return getForumtype();
  }

  @Override
  public SitesRecord value1(UUID value) {
    setSiteid(value);
    return this;
  }

  @Override
  public SitesRecord value2(URI value) {
    setSiteurl(value);
    return this;
  }

  @Override
  public SitesRecord value3(LocalDateTime value) {
    setSiteupdated(value);
    return this;
  }

  @Override
  public SitesRecord value4(ForumType value) {
    setForumtype(value);
    return this;
  }

  @Override
  public SitesRecord values(UUID value1, URI value2, LocalDateTime value3, ForumType value4) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached SitesRecord */
  public SitesRecord() {
    super(Sites.SITES);
  }

  /** Create a detached, initialised SitesRecord */
  public SitesRecord(UUID siteid, URI siteurl, LocalDateTime siteupdated, ForumType forumtype) {
    super(Sites.SITES);

    setSiteid(siteid);
    setSiteurl(siteurl);
    setSiteupdated(siteupdated);
    setForumtype(forumtype);
  }
}
