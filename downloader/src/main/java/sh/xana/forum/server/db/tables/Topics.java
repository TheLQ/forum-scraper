/*
 * This file is generated by jOOQ.
 */
package sh.xana.forum.server.db.tables;

import java.util.UUID;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import sh.xana.forum.server.db.ForumScrape;
import sh.xana.forum.server.db.tables.records.TopicsRecord;
import sh.xana.forum.server.dbutil.UuidConverter;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Topics extends TableImpl<TopicsRecord> {

  private static final long serialVersionUID = 1L;

  /** The reference instance of <code>forum-scrape.Topics</code> */
  public static final Topics TOPICS = new Topics();

  /** The class holding records for this type */
  @Override
  public Class<TopicsRecord> getRecordType() {
    return TopicsRecord.class;
  }

  /** The column <code>forum-scrape.Topics.topicId</code>. */
  public final TableField<TopicsRecord, UUID> TOPICID =
      createField(
          DSL.name("topicId"),
          SQLDataType.BINARY(16).nullable(false),
          this,
          "",
          new UuidConverter());

  /** The column <code>forum-scrape.Topics.forumId</code>. */
  public final TableField<TopicsRecord, UUID> FORUMID =
      createField(
          DSL.name("forumId"),
          SQLDataType.BINARY(16)
              .nullable(false)
              .defaultValue(
                  DSL.field(
                      "'\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'", SQLDataType.BINARY)),
          this,
          "",
          new UuidConverter());

  /** The column <code>forum-scrape.Topics.firstPageId</code>. */
  public final TableField<TopicsRecord, UUID> FIRSTPAGEID =
      createField(
          DSL.name("firstPageId"),
          SQLDataType.BINARY(16)
              .nullable(false)
              .defaultValue(
                  DSL.field(
                      "'\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'", SQLDataType.BINARY)),
          this,
          "",
          new UuidConverter());

  /** The column <code>forum-scrape.Topics.origId</code>. */
  public final TableField<TopicsRecord, byte[]> ORIGID =
      createField(
          DSL.name("origId"),
          SQLDataType.BINARY(16)
              .nullable(false)
              .defaultValue(
                  DSL.field(
                      "'\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'", SQLDataType.BINARY)),
          this,
          "");

  /** The column <code>forum-scrape.Topics.name</code>. */
  public final TableField<TopicsRecord, String> NAME =
      createField(DSL.name("name"), SQLDataType.CLOB.nullable(false), this, "");

  private Topics(Name alias, Table<TopicsRecord> aliased) {
    this(alias, aliased, null);
  }

  private Topics(Name alias, Table<TopicsRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  /** Create an aliased <code>forum-scrape.Topics</code> table reference */
  public Topics(String alias) {
    this(DSL.name(alias), TOPICS);
  }

  /** Create an aliased <code>forum-scrape.Topics</code> table reference */
  public Topics(Name alias) {
    this(alias, TOPICS);
  }

  /** Create a <code>forum-scrape.Topics</code> table reference */
  public Topics() {
    this(DSL.name("Topics"), null);
  }

  public <O extends Record> Topics(Table<O> child, ForeignKey<O, TopicsRecord> key) {
    super(child, key, TOPICS);
  }

  @Override
  public Schema getSchema() {
    return aliased() ? null : ForumScrape.FORUM_SCRAPE;
  }

  @Override
  public Topics as(String alias) {
    return new Topics(DSL.name(alias), this);
  }

  @Override
  public Topics as(Name alias) {
    return new Topics(alias, this);
  }

  /** Rename this table */
  @Override
  public Topics rename(String name) {
    return new Topics(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public Topics rename(Name name) {
    return new Topics(name, null);
  }

  // -------------------------------------------------------------------------
  // Row5 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row5<UUID, UUID, UUID, byte[], String> fieldsRow() {
    return (Row5) super.fieldsRow();
  }
}
