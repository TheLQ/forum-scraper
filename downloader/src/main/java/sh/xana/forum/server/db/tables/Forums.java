/*
 * This file is generated by jOOQ.
 */
package sh.xana.forum.server.db.tables;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import sh.xana.forum.server.db.ForumScrape;
import sh.xana.forum.server.db.Keys;
import sh.xana.forum.server.db.tables.records.ForumsRecord;
import sh.xana.forum.server.dbutil.UuidConverter;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Forums extends TableImpl<ForumsRecord> {

  private static final long serialVersionUID = 1L;

  /** The reference instance of <code>forum-scrape.Forums</code> */
  public static final Forums FORUMS = new Forums();

  /** The class holding records for this type */
  @Override
  public Class<ForumsRecord> getRecordType() {
    return ForumsRecord.class;
  }

  /** The column <code>forum-scrape.Forums.forumId</code>. */
  public final TableField<ForumsRecord, UUID> FORUMID =
      createField(
          DSL.name("forumId"),
          SQLDataType.BINARY(16).nullable(false).defaultValue(DSL.inline("0x", SQLDataType.BINARY)),
          this,
          "",
          new UuidConverter());

  /** The column <code>forum-scrape.Forums.parentForumId</code>. */
  public final TableField<ForumsRecord, UUID> PARENTFORUMID =
      createField(
          DSL.name("parentForumId"),
          SQLDataType.BINARY(16).nullable(false).defaultValue(DSL.inline("0x", SQLDataType.BINARY)),
          this,
          "",
          new UuidConverter());

  /** The column <code>forum-scrape.Forums.siteId</code>. */
  public final TableField<ForumsRecord, UUID> SITEID =
      createField(
          DSL.name("siteId"),
          SQLDataType.BINARY(16).nullable(false).defaultValue(DSL.inline("0x", SQLDataType.BINARY)),
          this,
          "",
          new UuidConverter());

  /** The column <code>forum-scrape.Forums.name</code>. */
  public final TableField<ForumsRecord, String> NAME =
      createField(DSL.name("name"), SQLDataType.CLOB.nullable(false), this, "");

  /** The column <code>forum-scrape.Forums.description</code>. */
  public final TableField<ForumsRecord, String> DESCRIPTION =
      createField(DSL.name("description"), SQLDataType.CLOB.nullable(false), this, "");

  private Forums(Name alias, Table<ForumsRecord> aliased) {
    this(alias, aliased, null);
  }

  private Forums(Name alias, Table<ForumsRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  /** Create an aliased <code>forum-scrape.Forums</code> table reference */
  public Forums(String alias) {
    this(DSL.name(alias), FORUMS);
  }

  /** Create an aliased <code>forum-scrape.Forums</code> table reference */
  public Forums(Name alias) {
    this(alias, FORUMS);
  }

  /** Create a <code>forum-scrape.Forums</code> table reference */
  public Forums() {
    this(DSL.name("Forums"), null);
  }

  public <O extends Record> Forums(Table<O> child, ForeignKey<O, ForumsRecord> key) {
    super(child, key, FORUMS);
  }

  @Override
  public Schema getSchema() {
    return aliased() ? null : ForumScrape.FORUM_SCRAPE;
  }

  @Override
  public List<ForeignKey<ForumsRecord, ?>> getReferences() {
    return Arrays.asList(Keys.FK_FORUMS_SITES);
  }

  private transient Sites _sites;

  public Sites sites() {
    if (_sites == null) _sites = new Sites(this, Keys.FK_FORUMS_SITES);

    return _sites;
  }

  @Override
  public Forums as(String alias) {
    return new Forums(DSL.name(alias), this);
  }

  @Override
  public Forums as(Name alias) {
    return new Forums(alias, this);
  }

  /** Rename this table */
  @Override
  public Forums rename(String name) {
    return new Forums(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public Forums rename(Name name) {
    return new Forums(name, null);
  }

  // -------------------------------------------------------------------------
  // Row5 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row5<UUID, UUID, UUID, String, String> fieldsRow() {
    return (Row5) super.fieldsRow();
  }
}
