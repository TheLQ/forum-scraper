<configuration>

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <!-- Register the shutdown hook to allow logback to cleanly stop appenders -->
  <!-- this is strongly recommend when using AwsLogsAppender in async mode, -->
  <!-- to allow the queue to flush on exit -->
  <shutdownHook class="ch.qos.logback.core.hook.DefaultShutdownHook"/>

  <if condition='isDefined("logbackType")'>
    <then>
      <!-- Timestamp used into the Log Stream Name -->
      <timestamp key="timestamp" datePattern="yyyyMMddHHmmssSSS"/>
      <appender name="ASYNC_AWS_LOGS" class="ca.pjer.logback.AwsLogsAppender">

        <!-- Nice layout pattern -->
        <!--      <pattern>%d{yyyyMMdd'T'HHmmss} %thread %level %logger{15} %msg%n</pattern>-->
        <layout>
          <pattern>[%thread] %-5level %logger{36} - %msg%n</pattern>
        </layout>

        <!-- Hardcoded Log Group Name -->
        <logGroupName>forum-scrape</logGroupName>

        <!-- Log Stream Name UUID Prefix -->
        <logStreamUuidPrefix>forum/${logbackType}/</logStreamUuidPrefix>

        <!-- Hardcoded AWS region -->
        <!-- So even when running inside an AWS instance in us-west-1, logs will go to us-west-2 -->
        <!--    <logRegion>us-west-2</logRegion>-->

        <!-- Maximum number of events in each batch (50 is the default) -->
        <!-- will flush when the event queue has 50 elements, even if still in quiet time (see maxFlushTimeMillis) -->
        <maxBatchLogEvents>50</maxBatchLogEvents>

        <!-- Maximum quiet time in millisecond (0 is the default) -->
        <!-- will flush when met, even if the batch size is not met (see maxBatchLogEvents) -->
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>

        <!-- Maximum block time in millisecond (5000 is the default) -->
        <!-- when > 0: this is the maximum time the logging thread will wait for the logger, -->
        <!-- when == 0: the logging thread will never wait for the logger, discarding events while the queue is full -->
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>

        <!-- Retention value for log groups, 0 for infinite see -->
        <!-- https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html for other -->
        <!-- possible values -->

        <retentionTimeDays>0</retentionTimeDays>
      </appender>
    </then>
  </if>

  <logger name="org.jooq.tools.LoggerListener" level="info"/>
  <logger name="org.jooq.impl.DefaultBinding" level="info"/>
  <logger name="software.amazon.awssdk" level="info"/>

  <root level="trace">
    <appender-ref ref="STDOUT"/>
    <appender-ref ref="ASYNC_AWS_LOGS"/>
  </root>
</configuration>